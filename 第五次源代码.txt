%5.1、%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Butterworth滤波主程序
f=imread('test1','pgm');
[f,revertclass]=tofloat(f);
PQ=paddedsize(size(f));
[U,V]=dftuv(PQ(1),PQ(2));
D=hypot(U,V);
D0=0.5*PQ(2);
F=fft2(f,PQ(1),PQ(2));
H=lpfilter('btw',PQ(1),PQ(2),D0,2);

G=H.*F;
g=ifft2(G);
g=g(1:size(f,1),1:size(f,2));
g=revertclass(g);

S1=0;
S2=0;
for i=1:PQ(1)
    for j=1:PQ(2)
        L1=(abs(F(i,j)))^2;
        S1=S1+L1;
    end
end

for i=1:PQ(1)
    for j=1:PQ(2)
        L2=(abs(G(i,j)))^2;
        S2=S2+L2;
    end
end
P=S2/S1
figure(1)
subplot(121),imshow(f),title('原图像');
subplot(122),imshow(g),title('经过Butterworth滤波器后');

%半径不同的Gaussion滤波主程序
f=imread('test1','pgm');
[f,revertclass]=tofloat(f);
PQ=paddedsize(size(f));
[U,V]=dftuv(PQ(1),PQ(2));
D=hypot(U,V);
%改变D0控制半径大小
D0=10;
F=fft2(f,PQ(1),PQ(2));
H=lpfilter('gaussion',PQ(1),PQ(2),D0,2);

G=H.*F;
g=ifft2(G);
g=g(1:size(f,1),1:size(f,2));
g=revertclass(g);

S1=0;
S2=0;
for i=1:PQ(1)
    for j=1:PQ(2)
        L1=(abs(F(i,j)))^2;
        S1=S1+L1;
    end
end

for i=1:PQ(1)
    for j=1:PQ(2)
        L2=(abs(G(i,j)))^2;
        S2=S2+L2;
    end
end
S1/512
S2/512
P=S2/S1
figure(1)
subplot(121),imshow(f),title('原图像');
subplot(122),imshow(g),title('经半径为10的Gaussion滤波器后');

%下面是主程序中用到的函数
function [U,V]=dftuv(M,N);
u=single(0:(M-1));
v=single(0:(N-1));

% Computer the indices for use in the meshgrid
idx=find(u>M/2);
u(idx)=u(idx)-M;
idy=find(v>N/2);
v(idy)=v(idy)-N;

% Computer the meshgrid arrays
[V,U]=meshgrid(v,u);


function PQ=paddedsize(AB,CD,PARAM)
if nargin==1
    PQ=2*AB;
elseif nargin==2 && ~ischar(CD)
    PQ=AB+CD-1;
    PQ=2*ceil(PQ/2);
elseif nargin==2
    m=max(AB);
    P=2^nextpow2(2*m);
    PQ=[P,P];
elseif (nargin==3) &&strcmpi(PARAM,'pwr2')
    m=max([AB,CD]);
    P=2^nextpow2(2*m);
    PQ=[P,P];
else
    error('wrong number of inputs')
end

% [out,revertclass] = tofloat(inputimage)
% inputimage 输入图像
% out 输出浮点图像,
% revertclass 输入图像的类型
function [out,revertclass] = tofloat(inputimage)
%Copy the book of Gonzales
identify = @(x) x;
tosingle = @im2single;
table = {'uint8',tosingle,@im2uint8
'uint16',tosingle,@im2uint16
'logical',tosingle,@logical
'double',identify,identify
'single',identify,identify};
classIndex = find(strcmp(class(inputimage),table(:,1)));
if isempty(classIndex)function H=lpfilter(type,M,N,D0,n)
[U,V]=dftuv(M,N);
D=hypot(U,V);
%开始滤波类型选择
switch type
    case 'ideal'
        H=single(D<D0);
    case 'btw'
       if nargin == 4
           n=1;
       end
       H=1./(1+(D./D0).^(2*n));
    case 'gaussion'
        H=exp(-(D.^2)./(2*(D0^2)));
    otherwise
        error('Unknown filter type')
end

%2

error('不支持的图像类型');
end
out = table{classIndex,2}(inputimage);
revertclass = table{classIndex,3};
end


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%5.2 
%%仅仅是将第一题中的传递函数从H=lpfilter('type',PQ(1),PQ(2),D0,2) 改为H=hpfilter('btw',PQ(1),PQ(2),D0,2);
f=imread('test1','pgm');
[f,revertclass]=tofloat(f);
PQ=paddedsize(size(f));
[U,V]=dftuv(PQ(1),PQ(2));
D=hypot(U,V);
D0=10;
F=fft2(f,PQ(1),PQ(2));
H=hpfilter('btw',PQ(1),PQ(2),D0,2);

G=H.*F;
g=ifft2(G);
g=g(1:size(f,1),1:size(f,2));
g=revertclass(g);

S1=0;
S2=0;
for i=1:PQ(1)
    for j=1:PQ(2)
        L1=(abs(F(i,j)))^2;
        S1=S1+L1;
    end
end

for i=1:PQ(1)
    for j=1:PQ(2)
        L2=(abs(G(i,j)))^2;
        S2=S2+L2;
    end
end
P=(S2/S1)^(1/2)
figure(1)
subplot(121),imshow(f),title('原图像');
subplot(122),imshow(g),title('经过Butterworth高通滤波器后');

%%相关函数
function H=hpfilter(type,M,N,D0,n)
if nargin==4
    n=1;%默认n=1
end
Hlp=lpfilter(type,M,N,D0,n);
H=1-Hlp;


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%5.3
%%拉普拉斯滤波
i=imread('test4 copy.bmp');
f=double(i);
F=fft2(f);
F=fftshift(F);
[p,q]=size(F);
c=1;

for u=1:p
    for v=1:q
      D(u,v)=sqrt((u-fix(p/2))^2+(v-fix(q/2))^2);
      H(u,v)=c*4*pi^2*D(u,v)^2;
      G(u,v)=H(u,v)*F(u,v);
    end
end
g=ifftshift(G);
g=ifft2(g);
g=uint8(real(g));
%归一化
maxf2=max(max(real(g)));
for u=1:p
    for v=1:q
        g1(u,v)=f(u,v)+g(u,v)/maxf2;
    end
end
g1=uint8(real(g1));

figure(1);
subplot(221)
imshow(i);
title('原始图像');
subplot(222)
imshow(g);
title('拉普拉斯图像')
subplot(223)
imshow(g1);
title('拉普拉斯滤波后图像')

%% unmask
i=imread('test3.pgm');
f=double(i);
F=fft2(f);
F=fftshift(F);
[p,q]=size(F);
k1=1;k2=1;D0=100;

for u=1:p
    for v=1:q
      D(u,v)=sqrt((u-fix(p/2))^2+(v-fix(q/2))^2);
      H(u,v)=1-exp(-D(u,v)^2/(2*D0^2));
      G(u,v)=(k1+k2*H(u,v))*F(u,v);
    end
end
g=ifftshift(G);
g=ifft2(g);
g=uint8(real(g));
figure(1);
subplot(221)
imshow(i);
title('原始图像');
subplot(222)
imshow(g);
title('unmask滤波图像')
subplot(223)
imshow(abs(225.*H./max(max(H))));
title('unmask高通滤波图像')



